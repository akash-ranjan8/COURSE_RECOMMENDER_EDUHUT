# -*- coding: utf-8 -*-
"""Untitled15.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1j3RF13TL5go_OTbzN5LNURQX9uPXDpw4

#COURSE RECOMMENDER SYSTEM

#IMPORTING THE LIBRARIES
"""

import pandas as pd
import numpy as np
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.metrics.pairwise import cosine_similarity

"""#HELPER FUNCTION"""

def get_title_from_index(index):
	return df[df.index == index]["COURSE"].values[0]

def get_index_from_title(title):
	return df[df.title == title]["INDEX"].values[0]

"""#READING THE DATASET"""

df = pd.read_csv("course_recommender.csv")
print (df.columns)

"""#SELECTING THE FEATURES"""

features = ['CLASS','SUBJECT']
for feature in features:
	df[feature] = df[feature].fillna('')

def combine_features(row):
	try:
		return row['CLASS'] +" "+row['SUBJECT']
	except:
		print ("Error:", row)	
df["combined_features"] = df.apply(combine_features,axis=1)
print ("Combined Features:", df["combined_features"].head())

"""#CREATING THE COUNT MATRIX FROM THE COMBINED MATRIX"""

cv = CountVectorizer()
count_matrix = cv.fit_transform(df["combined_features"])

"""#COMPUTING THE COSINE SIMILARITY BASED ON COUNT MATRIX"""

cosine_sim = cosine_similarity(count_matrix) 
student_user = "EXAM FEAR"

"""#GETTING THE INDEX OF COURSE FROM TITLE"""

course_index = get_index_from_title(student_user)
similar_courses =  list(enumerate(cosine_sim[course_index]))

"""#GET A LIST OF SIMILAR COURSES"""

sorted_similar_courses = sorted(similar_courses,key=lambda x:x[1],reverse=True)

"""#PRINTING THE COURSES"""

i=0
for element in sorted_similar_courses:
		print (get_title_from_index(element[0]))
		i=i+1